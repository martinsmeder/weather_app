(()=>{"use strict";var e={467:(e,t,n)=>{n.d(t,{B9:()=>o,QE:()=>r,cQ:()=>c}),console.log("this seem to be working (appLogic.js)");const r={getWeatherByLocation:async e=>{try{const t=await fetch(`https://api.weatherapi.com/v1/current.json?key=ce6acc34934c47f3916181423232305&q=${e}`,{mode:"cors"});if(t.ok){const e=await t.json(),n=await(e=>({city:e.location.name,localTime:e.location.localtime,weatherIcon:e.current.condition.icon,weather:e.current.condition.text,temperatureC:e.current.temp_c,temperatureF:e.current.temp_f,feelsLikeC:e.current.feelslike_c,feelsLikeF:e.current.feelslike_f,humidity:e.current.humidity,windSpeed:e.current.wind_kph,windDirection:e.current.wind_dir,visibility:e.current.vis_km,isDay:1===e.current.is_day}))(e);return n}throw new Error("Unable to fetch weather data.")}catch(e){throw console.error("An error occurred:",e.message),e}}},o={getGifById:async e=>{const t=`https://api.giphy.com/v1/gifs/${e}?api_key=8ewGe5vteIERFUPE6ZbcFuqh7mCIUIzY`;try{const e=await fetch(t,{mode:"cors"});if(e.ok){return(await e.json()).data.images.original.url}throw new Error("Unable to fetch GIF data.")}catch(e){throw console.error("An error occurred:",e.message),e}}},c={switchBackground:e=>{const{isDay:t,weather:n}=e;let r;return r=t?n.toLowerCase().includes("sun")?"images/sunny_day.jpg":n.toLowerCase().includes("cloud")?"images/cloudy_day.jpg":n.toLowerCase().includes("rain")?"images/rainy_day.jpg":n.toLowerCase().includes("snow")?"images/snowy_day.jpg":n.toLowerCase().includes("fog")?"images/foggy_day.jpg":"images/default_day.jpg":n.toLowerCase().includes("clear")?"images/clear_night.jpg":n.toLowerCase().includes("cloud")?"images/cloudy_night.jpg":n.toLowerCase().includes("rain")?"images/rainy_night.jpg":n.toLowerCase().includes("snow")?"images/snowy_night.jpg":n.toLowerCase().includes("fog")?"images/foggy_night.jpg":"images/default_night.jpg",r},setGifId:e=>{const{isDay:t,weather:n}=e;let r;return r=t?n.toLowerCase().includes("sun")?"3cB7aOM6347PW":n.toLowerCase().includes("cloud")?"l0HlQdk8kI9KIOjBe":n.toLowerCase().includes("rain")?"0opZPb9yugNFEd3kFQ":n.toLowerCase().includes("snow")?"9jvjuSSkMOYTyQfJji":n.toLowerCase().includes("fog")?"4CNT8NqboKa2UGpzhW":"fGs29ohKkNKwV4xxKW":"fGs29ohKkNKwV4xxKW",r}}},24:(e,t,n)=>{var r=n(467);console.log("this seem to be working (interface.js)"),(()=>{const e=document.querySelector("#searchLocation"),t=document.querySelector("#searchBtn"),n=document.querySelector("#toggleBtn"),o=document.querySelector("#dataContainer"),c=document.querySelector("#weatherGif");let i=null,a=!0,s=!0;const d=()=>{if(!i)return;const{city:e,localTime:t,weatherIcon:n,weather:r,temperatureC:c,temperatureF:d,feelsLikeC:l,feelsLikeF:u,humidity:m,windSpeed:p,windDirection:g,visibility:h}=i;for(;o.firstChild;)o.firstChild.remove();const w=document.createElement("h2");w.textContent=e,o.appendChild(w);const y=document.createElement("p"),C=t.split(" ")[1];y.textContent=C,o.appendChild(y);const f=document.createElement("img");f.src=n,f.alt=r,o.appendChild(f);const k=document.createElement("p");k.textContent=`Weather: ${r}`,o.appendChild(k);const L=document.createElement("p"),j=a?c:d;L.textContent=`Temperature: ${j}°${a?"C":"F"}`,o.appendChild(L);const E=document.createElement("p"),v=s?l:u;E.textContent=`Feels Like: ${v}°${a?"C":"F"}`,o.appendChild(E);const _=document.createElement("p");_.textContent=`Humidity: ${m}%`,o.appendChild(_);const x=document.createElement("p");x.textContent=`Wind Speed: ${p} km/h`,o.appendChild(x);const b=document.createElement("p");b.textContent=`Wind Direction: ${g}`,o.appendChild(b);const B=document.createElement("p");B.textContent=`Visibility: ${h} km`,o.appendChild(B)},l=async t=>{t.preventDefault();const n=e.value;try{i=await r.QE.getWeatherByLocation(n),d();const e=r.cQ.switchBackground(i);document.body.style.backgroundImage=`url(${e})`;const t=await r.cQ.setGifId(i),o=await r.B9.getGifById(t);c.src=o}catch(e){console.error("Error occurred during weather retrieval:",e)}};return{renderData:d,init:()=>{t.addEventListener("click",l),e.addEventListener("keydown",(e=>{13===e.keyCode&&l(e)})),n.addEventListener("click",(()=>{a=!a,s=!s,d(),n.textContent=a?"Celsius":"Fahrenheit"})),(async()=>{try{i=await r.QE.getWeatherByLocation("new york"),d();const e=r.cQ.switchBackground(i);document.body.style.backgroundImage=`url(${e})`;const t=await r.cQ.setGifId(i),n=await r.B9.getGifById(t);c.src=n}catch(e){console.error("Error occurred during weather retrieval:",e)}})()}}})().init()}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var c=t[r]={exports:{}};return e[r](c,c.exports,n),c.exports}n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n(467),n(24)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,