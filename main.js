(()=>{"use strict";var e={467:(e,t,n)=>{n.d(t,{B9:()=>o,QE:()=>r,cQ:()=>a}),console.log("this seem to be working (appLogic.js)");const r={getWeatherByLocation:async e=>{const t=`https://api.weatherapi.com/v1/current.json?key=ce6acc34934c47f3916181423232305&q=${e}`;try{const e=await fetch(t,{mode:"cors"});if(e.ok){const t=await e.json();return await(e=>{const t=e.location.localtime,n=(e=>{const t=new Date(e).getHours();return t>=4&&t<20})(t);return{city:e.location.name,localTime:t,weatherIcon:e.current.condition.icon,weather:e.current.condition.text,temperatureC:e.current.temp_c,temperatureF:e.current.temp_f,feelsLikeC:e.current.feelslike_c,feelsLikeF:e.current.feelslike_f,humidity:e.current.humidity,windSpeed:e.current.wind_kph,windDirection:e.current.wind_dir,visibility:e.current.vis_km,isDay:n}})(t)}throw new Error("Unable to fetch weather data.")}catch(e){throw console.error("An error occurred:",e.message),e}}},o={getGifById:async e=>{const t=`https://api.giphy.com/v1/gifs/${e}?api_key=8ewGe5vteIERFUPE6ZbcFuqh7mCIUIzY`;try{const e=await fetch(t,{mode:"cors"});if(e.ok){return(await e.json()).data.images.original.url}throw new Error("Unable to fetch GIF data.")}catch(e){throw console.error("An error occurred:",e.message),e}}},a={switchBackground:e=>{const{isDay:t,weather:n}=e;let r;return r=t?n.toLowerCase().includes("sun")?"images/sunny_day.jpg":n.toLowerCase().includes("cloud")?"images/cloudy_day.jpg":n.toLowerCase().includes("rain")?"images/rainy_day.jpg":n.toLowerCase().includes("snow")?"images/snowy_day.jpg":n.toLowerCase().includes("fog")?"images/foggy_day.jpg":"images/default_day.jpg":n.toLowerCase().includes("clear")?"images/clear_night.jpg":n.toLowerCase().includes("cloud")?"images/cloudy_night.jpg":n.toLowerCase().includes("rain")?"images/rainy_night.jpg":n.toLowerCase().includes("snow")?"images/snowy_night.jpg":n.toLowerCase().includes("fog")?"images/foggy_night.jpg":"images/default_night.jpg",r},setGifId:e=>{const{isDay:t,weather:n}=e;let r;return r=t?n.toLowerCase().includes("sun")?"KZkiw30m1vgjZr6L3a":n.toLowerCase().includes("cloud")?"l0HlQdk8kI9KIOjBe":n.toLowerCase().includes("rain")?"0opZPb9yugNFEd3kFQ":n.toLowerCase().includes("snow")?"9jvjuSSkMOYTyQfJji":n.toLowerCase().includes("fog")?"4CNT8NqboKa2UGpzhW":"fGs29ohKkNKwV4xxKW":"dYGCU6itccVJbdyyeb",r}}},24:(e,t,n)=>{var r=n(467);console.log("this seem to be working (interface.js)");const o=(()=>{const e=document.querySelector("#dataContainer"),t=document.querySelector("#weatherGif");return{renderData:(t,n,r)=>{if(!t)return;const{city:o,localTime:a,weatherIcon:c,weather:i,temperatureC:s,temperatureF:d,feelsLikeC:l,feelsLikeF:u,humidity:m,windSpeed:p,windDirection:g,visibility:h}=t;for(;e.firstChild;)e.firstChild.remove();const w=document.createElement("h2");w.textContent=o,e.appendChild(w);const y=document.createElement("p"),C=a.split(" ")[1];y.textContent=C,e.appendChild(y);const f=document.createElement("img");f.src=c,f.alt=i,e.appendChild(f);const k=document.createElement("p");k.textContent=`Weather: ${i}`,e.appendChild(k);const L=document.createElement("p"),j=n?s:d;L.textContent=`Temperature: ${j}°${n?"C":"F"}`,e.appendChild(L);const E=document.createElement("p"),v=r?l:u;E.textContent=`Feels Like: ${v}°${n?"C":"F"}`,e.appendChild(E);const _=document.createElement("p");_.textContent=`Humidity: ${m}%`,e.appendChild(_);const b=document.createElement("p");b.textContent=`Wind Speed: ${p} km/h`,e.appendChild(b);const x=document.createElement("p");x.textContent=`Wind Direction: ${g}`,e.appendChild(x);const I=document.createElement("p");I.textContent=`Visibility: ${h} km`,e.appendChild(I)},setGif:async e=>{const n=await r.cQ.setGifId(e),o=await r.B9.getGifById(n);t.src=o}}})();(()=>{const e=document.querySelector("#searchLocation"),t=document.querySelector("#searchBtn"),n=document.querySelector("#toggleBtn");let a=null,c=!0,i=!0;const s=async t=>{t.preventDefault();const n=e.value;try{a=await r.QE.getWeatherByLocation(n),o.renderData(a,c,i);const e=r.cQ.switchBackground(a);document.body.style.backgroundImage=`url(${e})`,await o.setGif(a)}catch(e){console.error("Error occurred during weather retrieval:",e)}},d=()=>{c=!c,i=!i,o.renderData(a,c,i),n.textContent=c?"Celsius":"Fahrenheit"};return{init:()=>{t.addEventListener("click",s),e.addEventListener("keydown",(e=>{13===e.keyCode&&s(e)})),n.addEventListener("click",d),(async()=>{try{a=await r.QE.getWeatherByLocation("new york"),o.renderData(a,c,i);const e=r.cQ.switchBackground(a);document.body.style.backgroundImage=`url(${e})`,await o.setGif(a)}catch(e){console.error("Error occurred during weather retrieval:",e)}})()}}})().init()}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var a=t[r]={exports:{}};return e[r](a,a.exports,n),a.exports}n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n(467),n(24)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,